<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAYAAAByDd+UAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH
        4QofEScZ8EzuDQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNy0xMC0zMVQxNzozOToyNSswODowMNcXOgwA
        AAAldEVYdGRhdGU6bW9kaWZ5ADIwMTctMTAtMzFUMTc6Mzk6MjUrMDg6MDCmSoKwAAAATnRFWHRzb2Z0
        d2FyZQBJbWFnZU1hZ2ljayA2LjkuMS0xMCBRMTYgeDg2XzY0IDIwMTctMTAtMjYgaHR0cDovL3d3dy5p
        bWFnZW1hZ2ljay5vcmclN1zIAAAAGHRFWHRUaHVtYjo6RG9jdW1lbnQ6OlBhZ2VzADGn/7svAAAAF3RF
        WHRUaHVtYjo6SW1hZ2U6OkhlaWdodAAzMij0+PQAAAAWdEVYdFRodW1iOjpJbWFnZTo6V2lkdGgAMzLQ
        Wzh5AAAAGXRFWHRUaHVtYjo6TWltZXR5cGUAaW1hZ2UvcG5nP7JWTgAAABd0RVh0VGh1bWI6Ok1UaW1l
        ADE1MDk0NDI3NjVJfW+kAAAAE3RFWHRUaHVtYjo6U2l6ZQAxLjAxS0JCzN3n1AAAAER0RVh0VGh1bWI6
        OlVSSQBmaWxlOi8vL3dvcmtzcGFjZS90bXAvbW9ncjJfOV8zNWEwNGQ0ZTZhNGQzMV8yZDEyNF8yMTlb
        MF1viQrhAAAFuElEQVRIS62WZ4xUVRiG7+5sAcQFl+bOzC3n3tmhJCYsUoIRjDGoWIKoAX8RI5JYUYzl
        hxF0UaNGEyIl7L13ZmkmEkvEgKKUH4glNqKCLYigKGUBVyFYUZ/3zkyCIuCKJ3lz2tfPd75zrJO12A5A
        rq5g+2cznh/b/i7wO9gf2cES+jHsdxfdKbcoa6ww49Yh9GqwBfwMPgfvgE/AYbADTAszXg/R/+cWwxyn
        3RTCLgFfgI7I9heEjj+m4OQy9COYP8r6N0BeT4G+VnxdbouMa83tM9AqOCaHoDdAJ5gVZ3K942wpdJHj
        W6Hr94gd/1b29oDNBduMmN8vn/B3qcEs1IMHwC9gSWgHffAIYV5dnM01tHtefYhy0JP9x8BvQGfcC5Ql
        /Yumc4iyfjWeNMP4JTiEopfirL+I8RqwAcjr18A6sAz65+m/A/vgGxWmg+owa5clHqfBZLWl/ep2L2iI
        bXMpoXoBAb8CWf49+AEcAgePGv8BFAHtK6GOwLc2ss2kohs0hhk/JbnHNIis2PXr8ORclD1XFnAE/ES6
        r2O/NXaCyZFjRoeen2fuIegq6HV2G7kerfTvlXkEjDFroLk4ynrd/5K9bABPh389hAqhUn0bkOWfFl2T
        IUFSKKyOPFMVtaShD3qztxjoilxUNLlG+qeBPFZExK9I7Eb+nSQf9GWlWEBymKls7gXfKtW55LdoDFaA
        2hJlqbFfDUTfAVrnNAzj6gQ3lunlcSf8d0Ezk7GuE+E396CnZ+Ipk3PKGzvBDbrA9FIoAx4EqbIu7iah
        z/otrH0AXuUanEmWUoH8TeBFMAdIaSvCe3CWkxl/Vloz44ueUyUBbSwcxKJHQtfrJteB0nw//XVc5OpE
        WVLilFBJKHcU3OB85v0ZF4AMvpBjmUiPpwYakwo9twa5M1hTki1GVx+EJFViC9YMBwqZsJC1AzBdDqqf
        aGixVo6u1/pNrHfAuJoehf50oEjMXNA0uJZQnsd4J3QrQG1JnsmzpiukkOekUAf9ZsF2zgCaC0tBJ3dq
        XJTNVRE6C4xk7W1A5ibMXyU0tr8aRS49+RCMKK+vBRjgWEU7S2H3nwXK3iG6f3J3EwKbJRiPhKdYk8IL
        Y8/FykBZqNB9DW4mlNPwUhm9DU8uC2UkVQeFw1lDoVkPUIihWZNm7RX0dIK8hOuwqRBm+jND81WM5WEE
        qBxmYjiguQbCShbfi5DTuCZTGFPMzcPLhwxJLWseWDGUe5wYtRLUzGt0tXYNYxX4lxk3sRBMYMJ5+R+B
        cUWnSUr1CpA0/tTSO+i/D1aRKAb6wYyVlesxMlt5HTBKCXgF6wr34tgxtfSjgM5Px4CRuRoV3wbC8hAL
        Kk2ku5kC8X2Mld5Knnagizy+3TY6jxgQtmA8qEq00Qi7kuo29vaSrY8jZxLjjeAI623o6U9vWUXjWFEm
        14+JroLOUxbKW1UcZfAerJ+93G9JEcJry2uteFZf8U4NBYIM/BF8DPQwH0ZuzNm60jOv19AScQhjW9b0
        Kp/VZqDMrUAK7iBcCv1bCN2AonzBCWoXec3cy2AQ6xMQrKdsO0j4kLUNnhnI7i/5xzRlGajHmjyEd8Og
        LBSzaio1MSllvB6mgz1VGkVhK9A1kFF6PfTX2QX/7CgTnIW87pJ7wgaxQMUJbodZ4dmN9avoPwQ6S3mh
        TJQijSkaysBkj7tmFO6GKN2FT9XCAXwfMr6+FxK4FSsvwIB6wpimRg4kCsPoB/G3yRYcjCvV03fBAbwf
        Od0KrLamLr/6JIVtZiFEIV3KF6MvnpQpSk1zsu909slKPUtmLnzkwj+c2Yka/xbrycZ85RP1Ougk1e/n
        p9Zbnye1432i5vVtTvi73JTyf/sm7sOjBXgxlmJg049k/v98EysNIYI+wleCoz/COq/KR3g7hULXSe9o
        mfMUGsL473iUKT1f8jApDEp/PA54VczY2DXdRHfyZll/AnygCC4UdNEeAAAAAElFTkSuQmCC
</value>
  </data>
</root>